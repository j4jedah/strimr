{"version":3,"sources":["components/graphql/mutations.js","components/AddSong.js","components/Header.js","components/reducer.js","components/graphql/subscriptions.js","components/SongList.js","components/graphql/queries.js","components/QueuedSongList.js","components/SongPlayer.js","App.js","components/theme.js","components/graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","useStyles","makeStyles","theme","container","display","alignItems","marginTop","urlInput","margin","spacing","addSongBtn","dialogContent","textAlign","thumbnail","width","borderRadius","DEFAULT_SONG","duration","title","artist","AddSong","useMutation","addSong","React","useState","dialog","setDialog","url","setUrl","playable","setPlayable","song","setSong","handleChangeSong","event","target","name","value","prevSong","a","player","nestedPlayer","getVideoData","songData","getYouTubeInfo","getCurrentSound","getSoundCloudInfo","variables","length","err","console","error","getDuration","author","video_id","Promise","resolve","Number","user","username","artwork_url","replace","useEffect","isPlayable","SoundCloudPlayer","canPlay","YouTubePlayer","thumbnailStyle","className","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","type","fullWidth","label","required","DialogActions","Button","color","onClick","variant","e","placeholder","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBox","hidden","onReady","marginLeft","Header","AppBar","Toolbar","HeadsetMicOutlined","Typography","component","songReducer","state","action","isPlaying","payload","GET_SONGS","songInfoContainer","songContainer","objectFit","height","songInfo","justifyContent","minWidth","maxHeight","textOverflow","overflow","Song","classes","higherThanSm","useMediaQuery","breakpoints","up","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","id","Card","CardMedia","image","CardContent","style","gutterBottom","CardActions","IconButton","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","flexDirection","CircularProgress","log","songs","map","GET_QUEUED_SONGS","avatar","text","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","window","confirm","Delete","QueuedSongList","queue","scrollbarWidth","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","positionInQueue","setPositionInQueue","useQuery","loop","setLoop","songIndex","findIndex","played","setPlayed","nextSong","seconds","seeking","setSeeking","playedSeconds","setPlayedSeconds","reactPlayerRef","useRef","SkipPrevious","PauseSharp","SkipNext","songNext","Date","toISOString","substr","LoopOutlined","onDoubleClick","cursor","Slider","newValue","onMouseDown","onMouseUp","current","seekTo","min","max","step","ref","onProgress","playing","createContext","App","initialSong","useReducer","greaterThanSm","greaterThanMd","Provider","Hidden","only","Grid","item","xs","md","paddingTop","top","right","left","bottom","createTheme","palette","primary","teal","secondary","purple","process","REACT_APP_NOT_SECRET_CODE","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","connectionParams","headers","contentType","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","StrictMode","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d0d4485e.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n    mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`;\n\nexport const ADD_SONG = gql`\n  mutation addSong(\n    $title: String\n    $duration: Float\n    $artist: String\n    $thumbnail: String\n    $url: String\n  ) {\n    insert_songs(\n      objects: {\n        artist: $artist\n        duration: $duration\n        thumbnail: $thumbnail\n        url: $url\n        title: $title\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n","import { useMutation } from '@apollo/client'\nimport { TextField, InputAdornment, Button, Dialog, DialogTitle, DialogContent, DialogActions, makeStyles } from '@material-ui/core'\nimport { AddBox, Link } from '@material-ui/icons'\nimport React from 'react'\nimport ReactPlayer from 'react-player'\nimport SoundCloudPlayer from 'react-player/soundcloud'\nimport YouTubePlayer from 'react-player/youtube'\nimport { ADD_SONG } from './graphql/mutations'\n\n\n\nconst useStyles = makeStyles( theme => ( {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: 20\n    },\n    urlInput: {\n        margin: theme.spacing( 1 )\n    },\n    addSongBtn: {\n        margin: theme.spacing( 1 )\n    },\n    dialogContent: {\n        textAlign: 'center',\n    },\n    thumbnail: {\n        width: '90%',\n        borderRadius: '2%'\n    }\n\n} ) )\n\nconst DEFAULT_SONG = {\n\n    duration: 0,\n    title: '',\n    artist: '',\n    thumbnail: ''\n}\n\n\n\nfunction AddSong () {\n    const [ addSong ] = useMutation( ADD_SONG )\n    const [ dialog, setDialog ] = React.useState( false )\n    const [ url, setUrl ] = React.useState( '' )\n    const [ playable, setPlayable ] = React.useState( false )\n\n    const [ song, setSong ] = React.useState( DEFAULT_SONG )\n\n    React.useEffect( () => {\n        const isPlayable = SoundCloudPlayer.canPlay( url ) || YouTubePlayer.canPlay( url )\n        setPlayable( isPlayable )\n    }, [ url ] )\n\n    function handleChangeSong ( event ) {\n        const { name, value } = event.target\n        setSong( prevSong => ( {\n            ...prevSong,\n            [ name ]: value\n        } ) )\n    }\n\n    async function handleSongEdit ( { player } ) {\n        const nestedPlayer = player.player.player\n        let songData\n        if ( nestedPlayer.getVideoData )\n        {\n            songData = getYouTubeInfo( nestedPlayer )\n        } else if ( nestedPlayer.getCurrentSound )\n        {\n            songData = await getSoundCloudInfo( nestedPlayer )\n        }\n        setSong( { ...songData, url } )\n    }\n\n    async function handleAddSong () {\n        try\n        {\n            const { title, artist, thumbnail, duration } = song\n            addSong( {\n                variables: {\n                    url: url.length > 0 ? url : null,\n                    artist: artist.length > 0 ? artist : null,\n                    title: title.length > 0 ? title : null,\n                    duration: duration > 0 ? duration : null,\n                    thumbnail: thumbnail.length > 0 ? thumbnail : null,\n                }\n            } )\n            setSong( DEFAULT_SONG )\n            setDialog( false )\n            setUrl( '' )\n        } catch ( err )\n        {\n            console.error( 'Error adding song', err )\n        }\n\n    }\n\n    function getYouTubeInfo ( player ) {\n        const duration = player.getDuration()\n        const { title, author, video_id } = player.getVideoData()\n        const thumbnail = `https://img.youtube.com/vi/${video_id}/0.jpg`\n        return { title, duration, thumbnail, artist: author }\n    }\n    function getSoundCloudInfo ( player ) {\n        return new Promise( resolve => {\n            player.getCurrentSound( songData => {\n                if ( songData )\n                {\n                    resolve( {\n                        duration: Number( songData.duration / 1000 ),\n                        title: songData.title,\n                        artist: songData.user.username,\n                        thumbnail: songData.artwork_url.replace( '-large', '-t500x500' )\n                    } )\n                }\n            } )\n        } )\n\n\n    }\n\n    const { container, addSongBtn, urlInput, dialogContent, thumbnailStyle } = useStyles()\n\n    const { thumbnail, title, artist } = song\n    return (\n        <div className={container}>\n            <Dialog\n                className={dialogContent}\n                open={dialog}\n                // onClose={() => setDialog( false ).isRequired}\n                onClose={false}\n            >\n                <DialogTitle>\n                    Add song\n                </DialogTitle>\n                <DialogContent>\n                    <img className={thumbnailStyle} src={thumbnail} alt='Video thumbnail' />\n                    <TextField\n                        onChange={handleChangeSong}\n                        value={title}\n                        type='text'\n                        fullWidth={true}\n                        margin='dense'\n                        label='Title'\n                        name='title'\n                        required\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        value={artist}\n                        type='text'\n                        fullWidth={true}\n                        margin='dense'\n                        name='artist'\n                        label='Artist'\n                        required\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        value={thumbnail}\n                        type='text'\n                        fullWidth={true}\n                        margin='dense'\n                        name='thumbnail'\n                        label='Song thumbnail'\n                        required\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        value={url}\n                        // type='text'\n                        fullWidth={true}\n                        margin='dense'\n                        name='url'\n                        label='URL'\n                        required\n                    />\n\n                </DialogContent>\n                <DialogActions >\n                    <Button color='secondary' onClick={() => setDialog( false )}>Cancel</Button>\n                    <Button onClick={handleAddSong} color='primary' variant='outlined' >Add song</Button>\n                </DialogActions>\n            </Dialog>\n            <TextField\n                onChange={( e ) => setUrl( e.target.value )}\n                value={url}\n                className={urlInput}\n                type='url'\n                fullWidth\n                margin='normal'\n                placeholder='Add Soundcloud or Youtube URL'\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position='start'>\n                            <Link />\n                        </InputAdornment>\n                    )\n                }}\n            />\n            <Button\n                disabled={!playable}\n                onClick={e => { setDialog( true ) }}\n                className={addSongBtn}\n                variant='contained' color='primary' endIcon={<AddBox />} >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleSongEdit} />\n        </div> )\n}\n\nexport default AddSong","import React from 'react'\nimport { AppBar, makeStyles, Typography } from '@material-ui/core'\nimport { Toolbar } from '@material-ui/core'\nimport { HeadsetMicOutlined } from '@material-ui/icons'\n\n\nconst useStyles = makeStyles( theme => ( {\n    title: {\n        marginLeft: 20\n    }\n} ) )\n\nfunction Header () {\n    const { title } = useStyles()\n    return (\n        <div>\n            <AppBar position='fixed'>\n                <Toolbar >\n                    <HeadsetMicOutlined />\n                    <Typography variant='h6' component='h1' className={title}>\n                        Music Streaming | Strimr\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Header","function songReducer(state, action) {\n  switch (action.type) {\n    case 'PLAY_SONG': {\n      return {\n        ...state,\n        isPlaying: true,\n      };\n    }\n    case 'PAUSE_SONG': {\n      return {\n        ...state,\n        isPlaying: false,\n      };\n    }\n    case 'SET_SONG': {\n      return {\n        ...state,\n        song: action.payload.song,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default songReducer;\n","import { gql } from '@apollo/client'\n\n\nexport const GET_SONGS = gql`\n    subscription getSongs {\n        songs(order_by: {created_at: desc}) {\n        artist\n        title\n        thumbnail\n        url\n        id\n        duration\n    }\n}\n\n`","import { useMutation, useSubscription } from '@apollo/client';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  IconButton,\n  Typography,\n  CardActions,\n  makeStyles,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { Pause, PlayArrow, Save } from '@material-ui/icons';\nimport React from 'react';\nimport { GET_SONGS } from './graphql/subscriptions';\nimport { SongContext } from '../App';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from './graphql/mutations';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(3),\n  },\n  songInfoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  songContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  thumbnail: {\n    objectFit: 'cover',\n    width: 150,\n    height: 150,\n  },\n  songInfo: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  title: {\n    minWidth: 100,\n    maxHeight: 50,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n}));\n\nfunction SongList() {\n  const { data, loading, error } = useSubscription(GET_SONGS);\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          marginTop: 50,\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          marginTop: 50,\n        }}\n      >\n        Error loading song lists.... Try again later\n        {console.log(error)}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {data.songs.map((song) => (\n        <Song key={song.id} song={song} />\n      ))}\n    </div>\n  );\n}\n\nfunction Song({ song }) {\n  const classes = useStyles();\n  const higherThanSm = useMediaQuery((theme) => theme.breakpoints.up('xs'));\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) =>\n      localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue)),\n  });\n\n  const { state, dispatch } = React.useContext(SongContext);\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && song.id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n  }, [song.id, state.isPlaying, state.song.id]);\n\n  function handleTogglePlay() {\n    dispatch({ type: 'SET_SONG', payload: { song } });\n    dispatch(state.isPlaying ? { type: 'PAUSE_SONG' } : { type: 'PLAY_SONG' });\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: 'Song' } },\n    });\n  }\n  return (\n    <Card className={classes.container}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia image={song.thumbnail} className={classes.thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography\n              className={classes.title}\n              style={{ display: higherThanSm ? '' : 'none' }}\n              gutterBottom\n              variant=\"h5\"\n              component=\"h2\"\n            >\n              {song.title}\n            </Typography>\n\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {song.artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              onClick={handleAddOrRemoveFromQueue}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              <Save />\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SongList;\n","import { gql } from '@apollo/client';\n\nexport const GET_QUEUED_SONGS = gql`\n  query getQueuedSongs {\n    queue @client {\n      id\n      title\n      artist\n      thumbnail\n      duration\n      url\n    }\n  }\n`;\n","import { useMutation } from '@apollo/client';\nimport { IconButton, makeStyles, useMediaQuery } from '@material-ui/core';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport React from 'react';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from './graphql/mutations';\n\n// const songList = {\n//   title: 'On my way',\n//   artist: 'Alan Walker',\n//   thumbnail:\n//     'https://images.hdqwalls.com/download/alan-walker-on-my-way-2x-1440x900.jpg',\n//   url: 'https://www.youtube.com/watch?v=dhYOPzcsbGM',\n// };\nfunction QueuedSongList({ queue }) {\n  // console.log(queue);\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\n  return (\n    greaterThanMd && (\n      <div style={{ margin: '10px 0' }}>\n        <Typography variant=\"button\" color=\"textSecondary\">\n          Playlist ({queue.length})\n        </Typography>\n        <div\n          style={{\n            '::Webkitscrollbar?': {\n              display: 'none',\n            },\n            maxHeight: 550,\n            overflow: 'auto',\n            scrollbarWidth: 'none',\n          }}\n        >\n          {queue.map((song, id) => (\n            <QueuedSong key={id} song={song} />\n          ))}\n        </div>\n      </div>\n    )\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: 64,\n    height: 64,\n  },\n  text: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  container: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '50px auto 50px',\n    gridGap: 40,\n    alignItems: 'center',\n    marginTop: 30,\n  },\n  songInfoContainer: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n}));\n\nfunction QueuedSong({ song }) {\n  const classes = useStyles();\n\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) => {\n      localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\n    },\n  });\n  function handleQueuedSongDel() {\n    const confirmDel = window.confirm(\n      'Are you sure you want to remove song from playlist?'\n    );\n    confirmDel &&\n      addOrRemoveFromQueue({\n        variables: { input: { ...song, __typename: 'Song' } },\n      });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar\n        src={song.thumbnail}\n        alt=\"Song thumbnail\"\n        className={classes.avatar}\n      />\n      <div className={classes.songInfoContainer}>\n        <Typography variant=\"subtitle2\" className={classes.text}>\n          {song.title}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n          className={classes.text}\n        >\n          {song.artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleQueuedSongDel}>\n        <Delete color=\"error\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default QueuedSongList;\n","import { useQuery } from '@apollo/client';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  makeStyles,\n  Slider,\n  Typography,\n} from '@material-ui/core';\nimport {\n  LoopOutlined,\n  PauseSharp,\n  PlayArrow,\n  SkipNext,\n  SkipPrevious,\n} from '@material-ui/icons';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { SongContext } from '../App';\nimport { GET_QUEUED_SONGS } from './graphql/queries';\nimport QueuedSongList from './QueuedSongList';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0 15px',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  thumbnail: {\n    width: 150,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nfunction SongPlayer() {\n  const { state, dispatch } = React.useContext(SongContext);\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\n  const { data } = useQuery(GET_QUEUED_SONGS);\n\n  const [loop,setLoop] = React.useState(false)\n\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex((song) => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n\n  const [played, setPlayed] = React.useState(0);\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({ type: 'SET_SONG', payload: { song: nextSong } });\n    }\n  }, [data.queue, dispatch, played, positionInQueue]);\n\n  const [seeking, setSeeking] = React.useState(false);\n\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n\n  const reactPlayerRef = React.useRef();\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? { type: 'PAUSE_SONG' } : { type: 'PLAY_SONG' });\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekingMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekingMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayPrev() {\n    const prevSong = data.queue[positionInQueue - 1];\n    if (prevSong) {\n      dispatch({ type: 'SET_SONG', payload: { song: prevSong } });\n    }\n  }\n\n  function handlePlayNext() {\n    const songNext = data.queue[positionInQueue + 1];\n    if (songNext) {\n      dispatch({ type: 'SET_SONG', payload: { song: songNext } });\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <Card variant=\"outlined\" className={classes.container}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton>\n              <SkipPrevious onClick={handlePlayPrev} />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <PauseSharp className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton>\n              <SkipNext onClick={handlePlayNext} />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}{' '}\n            </Typography>\n            <LoopOutlined\n              onClick={() => setLoop(true)}\n              onDoubleClick={() => setLoop(false)}\n              style={{\n                marginLeft: '20px',\n                color: loop ? '#009688' : 'white',\n                cursor: 'pointer',\n              }}\n            />\n          </div>\n          <Slider\n            onChange={handleProgressChange}\n            onMouseDown={handleSeekingMouseDown}\n            onMouseUp={handleSeekingMouseUp}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          playing={state.isPlaying}\n          url={state.song.url}\n          hidden\n          loop={loop}\n        />\n        <CardMedia\n          className={classes.thumbnail}\n          loading=\"lazy\"\n          image={state.song.thumbnail}\n        />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  );\n}\n\nexport default SongPlayer;\n","import { Grid, Hidden, useMediaQuery } from '@material-ui/core';\nimport React, { useReducer } from 'react';\nimport AddSong from './components/AddSong';\nimport Header from './components/Header';\nimport songReducer from './components/reducer';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\n\nexport const SongContext = React.createContext({\n  song: {\n    // id: 'd6feea7f-29c5-41cb-a13f-ef38663e63b4',\n    // artist: 'Sia',\n    title: 'Click on play icon to start playing song',\n  },\n  isPlaying: false,\n});\n\nfunction App() {\n  const initialSong = React.useContext(SongContext);\n  const [state, dispatch] = useReducer(songReducer, initialSong);\n\n  const greaterThanSm = useMediaQuery((theme) => theme.breakpoints.up('sm'));\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      <Grid container spacing={3}>\n        <Grid\n          item\n          xs={12}\n          md={7}\n          style={{ paddingTop: greaterThanSm ? 80 : 10 }}\n        >\n          <AddSong />\n\n          <SongList />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={5}\n          style={\n            greaterThanMd\n              ? {\n                  position: 'fixed',\n                  top: 70,\n                  right: 0,\n                  width: '100%',\n                }\n              : {\n                  position: 'fixed',\n                  left: 0,\n                  bottom: 0,\n                  width: '100%',\n                }\n          }\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createTheme } from '@material-ui/core/styles'\nimport { teal, purple } from '@material-ui/core/colors'\n\nconst theme = createTheme( {\n    palette: {\n        type: 'dark',\n        primary: teal,\n        secondary: purple\n    }\n} )\nexport default theme","import ApolloClient from 'apollo-client';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { gql } from '@apollo/client';\nimport { GET_QUEUED_SONGS } from './queries';\n\nconsole.log('process here: ', process.env.name);\nconsole.log('process again: ', process.env.REACT_APP_NOT_SECRET_CODE);\n\nconst client = new ApolloClient({\n  link: new WebSocketLink({\n    uri: 'wss://apollo-music-share-1.hasura.app/v1/graphql',\n    options: {\n      reconnect: true,\n      connectionParams: {\n        headers: {\n          contentType: 'application/json',\n          'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET,\n        },\n      },\n    },\n  }),\n  cache: new InMemoryCache(),\n  typeDefs: gql`\n    type Song {\n      id: uuid\n      title: String\n      artist: String\n      duration: Float\n      thumbnail: String\n      url: String\n    }\n    input SongInput {\n      id: uuid\n      title: String\n      artist: String\n      duration: Float\n      thumbnail: String\n      url: String\n    }\n    type Query {\n      queue: [Song]!\n    }\n    type Mutation {\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n  `,\n  resolvers: {\n    Mutation: {\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\n        const queryResult = cache.readQuery({\n          query: GET_QUEUED_SONGS,\n        });\n        if (queryResult) {\n          const { queue } = queryResult;\n          const isInQueue = queue.some((song) => song.id === input.id);\n          const newQueue = isInQueue\n            ? queue.filter((song) => song.id !== input.id)\n            : [...queue, input];\n          cache.writeQuery({\n            query: GET_QUEUED_SONGS,\n            data: { queue: newQueue },\n          });\n          return newQueue;\n        }\n        return [];\n      },\n    },\n  },\n});\n\nconst hasQueue = Boolean(localStorage.getItem('queue'));\n\nconst data = {\n  queue: hasQueue ? JSON.parse(localStorage.getItem('queue')) : [],\n};\n\nclient.writeData({ data });\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/client';\n\nimport App from './App';\nimport theme from './components/theme';\nimport client from './components/graphql/client';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}